
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pg_net" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE IF NOT EXISTS "public"."Attend" (
    "id" bigint NOT NULL,
    "childName" "text",
    "date" "date",
    "attend" "text",
    "groupId" character varying NOT NULL,
    "childId" bigint,
    "organizationId" bigint
);

ALTER TABLE "public"."Attend" OWNER TO "supabase_admin";

ALTER TABLE "public"."Attend" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Attend_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."Group" (
    "name" "text",
    "organizationId" bigint NOT NULL,
    "id" bigint NOT NULL,
    "groupId" character varying NOT NULL
);

ALTER TABLE "public"."Group" OWNER TO "postgres";

ALTER TABLE "public"."Group" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Group_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."Mentor" (
    "id" bigint NOT NULL,
    "fullName" "text",
    "organizationId" bigint,
    "groupId" bigint,
    "login" "text",
    "password" "text"
);

ALTER TABLE "public"."Mentor" OWNER TO "postgres";

ALTER TABLE "public"."Mentor" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Mentor_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."Organization" (
    "id" bigint NOT NULL,
    "name" "text",
    "secretCode" double precision
);

ALTER TABLE "public"."Organization" OWNER TO "postgres";

ALTER TABLE "public"."Organization" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Organiztion_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."schema_migrations" (
    "version" character varying(128) NOT NULL
);

ALTER TABLE "public"."schema_migrations" OWNER TO "postgres";

ALTER TABLE ONLY "public"."Attend"
    ADD CONSTRAINT "Attend_id_key" UNIQUE ("id");

ALTER TABLE ONLY "public"."Attend"
    ADD CONSTRAINT "Attend_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."Group"
    ADD CONSTRAINT "Group_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."Mentor"
    ADD CONSTRAINT "Mentor_id_key" UNIQUE ("id");

ALTER TABLE ONLY "public"."Mentor"
    ADD CONSTRAINT "Mentor_login_key" UNIQUE ("login");

ALTER TABLE ONLY "public"."Mentor"
    ADD CONSTRAINT "Mentor_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."Organization"
    ADD CONSTRAINT "Organization_passCode_key" UNIQUE ("secretCode");

ALTER TABLE ONLY "public"."Organization"
    ADD CONSTRAINT "Organiztion_id_key" UNIQUE ("id");

ALTER TABLE ONLY "public"."Organization"
    ADD CONSTRAINT "Organiztion_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."schema_migrations"
    ADD CONSTRAINT "schema_migrations_pkey" PRIMARY KEY ("version");

ALTER TABLE ONLY "public"."Group"
    ADD CONSTRAINT "Group_organizationId_fkey" FOREIGN KEY ("organizationId") REFERENCES "public"."Organization"("id");

ALTER TABLE ONLY "public"."Mentor"
    ADD CONSTRAINT "Mentor_organizationId_fkey" FOREIGN KEY ("organizationId") REFERENCES "public"."Organization"("id");

GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON TABLE "public"."Attend" TO "postgres";
GRANT ALL ON TABLE "public"."Attend" TO "anon";
GRANT ALL ON TABLE "public"."Attend" TO "authenticated";
GRANT ALL ON TABLE "public"."Attend" TO "service_role";

GRANT ALL ON SEQUENCE "public"."Attend_id_seq" TO "postgres";
GRANT ALL ON SEQUENCE "public"."Attend_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Attend_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Attend_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."Group" TO "anon";
GRANT ALL ON TABLE "public"."Group" TO "authenticated";
GRANT ALL ON TABLE "public"."Group" TO "service_role";

GRANT ALL ON SEQUENCE "public"."Group_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Group_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Group_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."Mentor" TO "anon";
GRANT ALL ON TABLE "public"."Mentor" TO "authenticated";
GRANT ALL ON TABLE "public"."Mentor" TO "service_role";

GRANT ALL ON SEQUENCE "public"."Mentor_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Mentor_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Mentor_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."Organization" TO "anon";
GRANT ALL ON TABLE "public"."Organization" TO "authenticated";
GRANT ALL ON TABLE "public"."Organization" TO "service_role";

GRANT ALL ON SEQUENCE "public"."Organiztion_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Organiztion_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Organiztion_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."schema_migrations" TO "anon";
GRANT ALL ON TABLE "public"."schema_migrations" TO "authenticated";
GRANT ALL ON TABLE "public"."schema_migrations" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
